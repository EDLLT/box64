#() vFv -> vFv
#() vFi -> vFi
#() vFu -> vFu
#() vFp -> vFp
#() vFA -> vFA
#() iFv -> iFv
#() iFi -> iFi
#() iFI -> iFI
#() iFu -> iFu
#() iFf -> iFf
#() iFd -> iFd
#() iFL -> iFL
#() iFp -> iFp
#() iFh -> iFh
#() iFH -> iFH
#() IFf -> IFf
#() IFd -> IFd
#() uFv -> uFv
#() uFu -> uFu
#() uFU -> uFU
#() UFs -> UFs
#() fFf -> fFf
#() dFv -> dFv
#() dFd -> dFd
#() lFi -> lFi
#() lFp -> lFp
#() LFv -> LFv
#() LFL -> LFL
#() pFL -> pFL
#() aFa -> aFa
#() vFEv -> vFEv
#() vFEp -> vFEp
#() iFEv -> iFEv
#() iFEi -> iFEi
#() iFEL -> iFEL
#() iFEp -> iFEp
#() iFEO -> iFEO
#() iFii -> iFii
#() iFiI -> iFiI
#() iFiu -> iFiu
#() iFip -> iFip
#() iFuu -> iFuu
#() iFup -> iFup
#() iFli -> iFli
#() iFpi -> iFpi
#() iFpp -> iFpp
#() iFhp -> iFhp
#() IFII -> IFII
#() uFEu -> uFEu
#() uFEV -> uFEV
#() uFpa -> uFpa
#() UFii -> UFii
#() UFUU -> UFUU
#() UFss -> UFss
#() fFif -> fFif
#() fFfi -> fFfi
#() fFff -> fFff
#() fFfD -> fFfD
#() fFfp -> fFfp
#() dFid -> dFid
#() dFdi -> dFdi
#() dFdd -> dFdd
#() dFdD -> dFdD
#() dFdp -> dFdp
#() LFpp -> LFpp
#() pFEv -> pFEv
#() pFEp -> pFEp
#() pFLL -> pFLL
#() aFia -> aFia
#() vFEip -> vFEip
#() vFEpi -> vFEpi
#() vFEpu -> vFEpu
#() vFfpp -> vFfpp
#() vFdpp -> vFdpp
#() iFEpp -> iFEpp
#() iFEpV -> iFEpV
#() iFiii -> iFiii
#() iFiiI -> iFiiI
#() iFiiu -> iFiiu
#() iFiiO -> iFiiO
#() iFiII -> iFiII
#() iFiuu -> iFiuu
#() iFiLN -> iFiLN
#() iFuii -> iFuii
#() iFuui -> iFuui
#() iFuuu -> iFuuu
#() iFuLp -> iFuLp
#() iFpip -> iFpip
#() iFpuu -> iFpuu
#() iFppL -> iFppL
#() iFpOu -> iFpOu
#() IFiIi -> IFiIi
#() fFfff -> fFfff
#() fFffp -> fFffp
#() dFddd -> dFddd
#() dFddp -> dFddp
#() pFEip -> pFEip
#() pFppL -> pFppL
#() hFEpp -> hFEpp
#() aFipa -> aFipa
#() lFpBp_i -> lFpBi
#() vFEipV -> vFEipV
#() iFEiiN -> iFEiiN
#() iFEipp -> iFEipp
#() iFEppp -> iFEppp
#() iFiiII -> iFiiII
#() iFiuui -> iFiuui
#() LFpLLh -> LFpLLh
#() pFppuL -> pFppuL
#() pFppLL -> pFppLL
#() iFEppiV -> iFEppiV
#() iFiLLLL -> iFiLLLL
#() iFEpippppp -> iFEpippppp
#defined(HAVE_LD80BITS) DFD -> DFD
#defined(HAVE_LD80BITS) DFDD -> DFDD
#defined(HAVE_LD80BITS) DFDp -> DFDp
#!defined(HAVE_LD80BITS) KFK -> KFK
#!defined(HAVE_LD80BITS) KFKK -> KFKK
#!defined(HAVE_LD80BITS) KFKp -> KFKp
#() iFEvpV -> iFEpV
#() UFsvvs -> UFss
wrappedcrashhandler:
wrappedldlinux:
- pFv:
  - ___tls_get_addr
- pFp:
  - __tls_get_addr
wrappedlibc:
- vFv:
- vFp:
- iFv:
- iFi:
  - __close_nocancel
- iFL:
- iFp:
- iFO:
- uFu:
- uFV:
- LFL:
- pFL:
- vFip:
- vFpi:
- vFpu:
- iFpp:
- iFpV:
- IFII:
- UFUU:
- pFip:
- hFpp:
- vFipV:
- iFvpV:
- iFiiN:
- iFipp:
- iFppp:
- iFiiII:
- iFppiV:
- iFpippppp:
wrappedlibm:
- UFs:
  - cacosf
  - cacoshf
  - casinf
  - casinhf
  - catanf
  - catanhf
  - ccosf
  - ccoshf
  - cexpf
  - clogf
  - cprojf
  - csinf
  - csinhf
  - csqrtf
  - ctanf
  - ctanhf
- fFf:
  - __acosf_finite
  - __acoshf_finite
  - __asinf_finite
  - __coshf_finite
  - __exp2f_finite
  - __expf_finite
  - __log10f_finite
  - __log2f_finite
  - __logf_finite
  - __sinhf_finite
  - __sqrtf_finite
- dFd:
  - __acos_finite
  - __acosh_finite
  - __asin_finite
  - __cosh_finite
  - __exp2_finite
  - __exp_finite
  - __log10_finite
  - __log2_finite
  - __log_finite
  - __sinh_finite
  - __sqrt_finite
- DFD:
  - pow10l
- KFK:
  - acoshl
  - acosl
  - asinhl
  - asinl
  - atanhl
  - cbrtl
  - erfcl
  - erfl
  - ldexpl
  - lgammal
  - logl
  - pow10l
  - tgammal
- fFff:
  - __atan2f_finite
  - __hypotf_finite
  - __powf_finite
- dFdd:
  - __atan2_finite
  - __hypot_finite
  - __pow_finite
- KFKK:
  - fmodl
  - powl
- KFKp:
  - frexpl
  - lgammal_r
- UFsvvs:
  - cpowf
wrappedlibrt:
